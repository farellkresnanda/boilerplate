# Tests and Deploy
name: Tests and Deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    # We'll run the test job on a single, stable configuration.
    runs-on: ubuntu-latest

    name: Run Unit Tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          # Use a modern, stable PHP version.
          # The exact version should match what you use in your project.
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Copy .env file for CI
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install dependencies
        # IMPORTANT: We are using `composer update` here instead of `composer install`.
        # The error log indicates that your `composer.lock` file is outdated and
        # contains dependencies that are incompatible with PHP 8.2.
        # This command will resolve all dependencies based on your `composer.json`
        # and create a new `composer.lock` file that works with PHP 8.2.
        run: composer update --prefer-dist --no-interaction

      - name: Install NPM Dependencies
        run: npm install

      - name: Compile Assets
        # Changed `npm run production` to the more modern `npm run build`
        run: npm run build

      - name: Generate Key
        run: php artisan key:generate

      - name: Execute tests
        run: vendor/bin/phpunit

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            cd /var/www/laravel-app
            git pull origin main
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
